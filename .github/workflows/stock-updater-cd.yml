name: Stock Updater Service CD

on:
  push:
    branches: [ main ]
    paths:
      - 'stock-updater-service/**'
      - 'terraform/**'
      - '.github/workflows/stock-updater-cd.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          cd stock-updater-service
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          cd stock-updater-service
          pytest app/tests/

  terraform:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
          
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="db_password=${{ secrets.DB_PASSWORD }}" -var="ssh_key_name=${{ secrets.SSH_KEY_NAME }}"
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve -var="db_password=${{ secrets.DB_PASSWORD }}" -var="ssh_key_name=${{ secrets.SSH_KEY_NAME }}"
          
      - name: Get EC2 IP
        if: github.ref == 'refs/heads/main'
        id: get-ip
        run: |
          cd terraform
          echo "EC2_IP=$(terraform output -raw stock_updater_public_ip)" >> $GITHUB_ENV

  deploy:
    needs: terraform
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/inventory/stock-updater-service
            git pull
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
